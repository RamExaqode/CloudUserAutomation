{
  "config": {
    "configFile": "F:\\CloudUserAutomation\\playwright.config.ts",
    "rootDir": "F:/CloudUserAutomation/tests",
    "forbidOnly": false,
    "fullyParallel": false,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 1
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "list",
        null
      ],
      [
        "html",
        null
      ],
      [
        "dot",
        null
      ],
      [
        "F:\\CloudUserAutomation\\node_modules\\allure-playwright\\dist\\cjs\\index.js",
        null
      ],
      [
        "json",
        {
          "outputFile": "test-results.json"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 15000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "F:/CloudUserAutomation/test-results",
        "repeatEach": 1,
        "retries": 2,
        "metadata": {},
        "id": "adminPortal",
        "name": "adminPortal",
        "testDir": "F:/CloudUserAutomation/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.50.0",
    "workers": 4,
    "webServer": null
  },
  "suites": [
    {
      "title": "log.spec.ts",
      "file": "log.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Capture Logs Example",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "adminPortal",
              "projectName": "adminPortal",
              "results": [
                {
                  "workerIndex": 0,
                  "status": "failed",
                  "duration": 1006,
                  "error": {
                    "message": "Error: ENOENT: no such file or directory, open 'F:\\CloudUserAutomation\\logs\\all_logs.log'",
                    "stack": "Error: ENOENT: no such file or directory, open 'F:\\CloudUserAutomation\\logs\\all_logs.log'\n    at F:\\CloudUserAutomation\\tests\\log.spec.ts:9:6",
                    "location": {
                      "file": "F:\\CloudUserAutomation\\tests\\log.spec.ts",
                      "column": 6,
                      "line": 9
                    },
                    "snippet": "\u001b[0m \u001b[90m  7 |\u001b[39m test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page\u001b[33m,\u001b[39m context }) \u001b[33m=>\u001b[39m {\n \u001b[90m  8 |\u001b[39m   \u001b[90m// Clear previous logs\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m   fs\u001b[33m.\u001b[39mwriteFileSync(logFilePath\u001b[33m,\u001b[39m \u001b[32m'=== Playwright Logs ===\\n'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 10 |\u001b[39m\n \u001b[90m 11 |\u001b[39m   \u001b[90m// Capture Console Logs\u001b[39m\n \u001b[90m 12 |\u001b[39m   page\u001b[33m.\u001b[39mon(\u001b[32m'console'\u001b[39m\u001b[33m,\u001b[39m (msg) \u001b[33m=>\u001b[39m {\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "F:\\CloudUserAutomation\\tests\\log.spec.ts",
                        "column": 6,
                        "line": 9
                      },
                      "message": "Error: ENOENT: no such file or directory, open 'F:\\CloudUserAutomation\\logs\\all_logs.log'\n\n\u001b[0m \u001b[90m  7 |\u001b[39m test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page\u001b[33m,\u001b[39m context }) \u001b[33m=>\u001b[39m {\n \u001b[90m  8 |\u001b[39m   \u001b[90m// Clear previous logs\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m   fs\u001b[33m.\u001b[39mwriteFileSync(logFilePath\u001b[33m,\u001b[39m \u001b[32m'=== Playwright Logs ===\\n'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 10 |\u001b[39m\n \u001b[90m 11 |\u001b[39m   \u001b[90m// Capture Console Logs\u001b[39m\n \u001b[90m 12 |\u001b[39m   page\u001b[33m.\u001b[39mon(\u001b[32m'console'\u001b[39m\u001b[33m,\u001b[39m (msg) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at F:\\CloudUserAutomation\\tests\\log.spec.ts:9:6\u001b[22m"
                    },
                    {
                      "location": {
                        "file": "F:\\CloudUserAutomation\\tests\\log.spec.ts",
                        "column": 25,
                        "line": 32
                      },
                      "message": "Error: tracing.stop: Must start tracing before stopping\n\n\u001b[0m \u001b[90m 30 |\u001b[39m   \u001b[90m// Here testInfo is correctly typed\u001b[39m\n \u001b[90m 31 |\u001b[39m   \u001b[36mconst\u001b[39m tracePath \u001b[33m=\u001b[39m path\u001b[33m.\u001b[39mjoin(__dirname\u001b[33m,\u001b[39m \u001b[32m`../logs/trace-${testInfo.title}.zip`\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 |\u001b[39m   \u001b[36mawait\u001b[39m context\u001b[33m.\u001b[39mtracing\u001b[33m.\u001b[39mstop({ path\u001b[33m:\u001b[39m tracePath })\u001b[33m;\u001b[39m \u001b[90m// Save trace file\u001b[39m\n \u001b[90m    |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 33 |\u001b[39m\n \u001b[90m 34 |\u001b[39m   \u001b[90m// Optionally log that tracing is saved\u001b[39m\n \u001b[90m 35 |\u001b[39m   fs\u001b[33m.\u001b[39mappendFileSync(logFilePath\u001b[33m,\u001b[39m \u001b[32m`[TRACE] Saved trace file to ${tracePath}\\n`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at F:\\CloudUserAutomation\\tests\\log.spec.ts:32:25\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-02-06T09:35:24.030Z",
                  "attachments": [],
                  "errorLocation": {
                    "file": "F:\\CloudUserAutomation\\tests\\log.spec.ts",
                    "column": 6,
                    "line": 9
                  }
                },
                {
                  "workerIndex": 1,
                  "status": "failed",
                  "duration": 268,
                  "error": {
                    "message": "Error: ENOENT: no such file or directory, open 'F:\\CloudUserAutomation\\logs\\all_logs.log'",
                    "stack": "Error: ENOENT: no such file or directory, open 'F:\\CloudUserAutomation\\logs\\all_logs.log'\n    at F:\\CloudUserAutomation\\tests\\log.spec.ts:9:6",
                    "location": {
                      "file": "F:\\CloudUserAutomation\\tests\\log.spec.ts",
                      "column": 6,
                      "line": 9
                    },
                    "snippet": "\u001b[0m \u001b[90m  7 |\u001b[39m test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page\u001b[33m,\u001b[39m context }) \u001b[33m=>\u001b[39m {\n \u001b[90m  8 |\u001b[39m   \u001b[90m// Clear previous logs\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m   fs\u001b[33m.\u001b[39mwriteFileSync(logFilePath\u001b[33m,\u001b[39m \u001b[32m'=== Playwright Logs ===\\n'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 10 |\u001b[39m\n \u001b[90m 11 |\u001b[39m   \u001b[90m// Capture Console Logs\u001b[39m\n \u001b[90m 12 |\u001b[39m   page\u001b[33m.\u001b[39mon(\u001b[32m'console'\u001b[39m\u001b[33m,\u001b[39m (msg) \u001b[33m=>\u001b[39m {\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "F:\\CloudUserAutomation\\tests\\log.spec.ts",
                        "column": 6,
                        "line": 9
                      },
                      "message": "Error: ENOENT: no such file or directory, open 'F:\\CloudUserAutomation\\logs\\all_logs.log'\n\n\u001b[0m \u001b[90m  7 |\u001b[39m test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page\u001b[33m,\u001b[39m context }) \u001b[33m=>\u001b[39m {\n \u001b[90m  8 |\u001b[39m   \u001b[90m// Clear previous logs\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m   fs\u001b[33m.\u001b[39mwriteFileSync(logFilePath\u001b[33m,\u001b[39m \u001b[32m'=== Playwright Logs ===\\n'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 10 |\u001b[39m\n \u001b[90m 11 |\u001b[39m   \u001b[90m// Capture Console Logs\u001b[39m\n \u001b[90m 12 |\u001b[39m   page\u001b[33m.\u001b[39mon(\u001b[32m'console'\u001b[39m\u001b[33m,\u001b[39m (msg) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at F:\\CloudUserAutomation\\tests\\log.spec.ts:9:6\u001b[22m"
                    },
                    {
                      "message": "Error: browserContext._wrapApiCall: Must start tracing before stopping"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 1,
                  "startTime": "2025-02-06T09:35:44.614Z",
                  "attachments": [
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "F:\\CloudUserAutomation\\test-results\\log-Capture-Logs-Example-adminPortal-retry1\\trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "F:\\CloudUserAutomation\\tests\\log.spec.ts",
                    "column": 6,
                    "line": 9
                  }
                },
                {
                  "workerIndex": 2,
                  "status": "passed",
                  "duration": 9426,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 2,
                  "startTime": "2025-02-06T09:35:46.200Z",
                  "attachments": [
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "F:\\CloudUserAutomation\\test-results\\log-Capture-Logs-Example-adminPortal-retry2\\video.webm"
                    }
                  ]
                }
              ],
              "status": "flaky"
            }
          ],
          "id": "3f18af1a958e0899e9df-83fda6f46f4998120f20",
          "file": "log.spec.ts",
          "line": 38,
          "column": 5
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-02-06T09:35:23.006Z",
    "duration": 32901.153,
    "expected": 0,
    "skipped": 0,
    "unexpected": 0,
    "flaky": 1
  }
}